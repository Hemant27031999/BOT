{"ast":null,"code":"var _jsxFileName = \"/home/hemant/Desktop/broadband/src/Maps/MarkerMaps.js\",\n    _s = $RefreshSig$();\n\nimport { Circle, CircleMarker, MapContainer, Polyline, Polygon, Popup, Rectangle, TileLayer, Tooltip, UpdateMapCenter, useMap } from 'react-leaflet';\nimport text from './example.txt';\nimport React, { useState, Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst polyline = [[51.505, -0.09], [51.51, -0.1], [51.51, -0.12]];\nconst center = [39.90603, -87.998566];\nconst multiPolyline = [[[51.5, -0.1], [51.5, -0.12], [51.52, -0.12]], [[51.5, -0.05], [51.5, -0.06], [51.52, -0.06]]];\nconst polygon = [[51.515, -0.09], [51.52, -0.1], [51.52, -0.12]];\nconst multiPolygon = [[[38.687518, -88.16288899999999], [38.6871, -88.162885], [38.685832999999995, -88.162899], [38.685835, -88.163451], [38.685897, -88.16718], [38.685894, -88.167484], [38.686384, -88.16748899999999], [38.686775, -88.167501], [38.686845, -88.167503], [38.687919, -88.167498], [38.689687, -88.167508], [38.690301999999996, -88.167514], [38.69084, -88.16751699999999], [38.692687, -88.167513], [38.693148, -88.16752], [38.693149999999996, -88.167059], [38.693141, -88.166412], [38.693137, -88.16581], [38.693110999999995, -88.16425799999999], [38.693093, -88.163286], [38.693087, -88.16292299999999], [38.69254, -88.162961], [38.692022, -88.162953], [38.691573, -88.162936], [38.690597, -88.16293], [38.690221, -88.162932], [38.689695, -88.162926], [38.689022, -88.16292299999999], [38.688668, -88.162902], [38.688644, -88.162902], [38.688306, -88.162899], [38.688165999999995, -88.162898], [38.687706999999996, -88.16288899999999], [38.687518, -88.16288899999999]], [[38.695499, -88.232624], [38.695993, -88.23261], [38.695980999999996, -88.232529], [38.695972999999995, -88.232434], [38.696092, -88.231669], [38.696222, -88.23091099999999], [38.69637, -88.230156], [38.696624, -88.228791], [38.69674, -88.228189], [38.696809, -88.227887], [38.696842, -88.22773099999999], [38.696723999999996, -88.227724], [38.696582, -88.227727], [38.696507, -88.227735], [38.696433999999996, -88.227756], [38.696397, -88.22776999999999], [38.69622, -88.227839], [38.696072, -88.227869], [38.695958999999995, -88.227863], [38.69506, -88.232636], [38.695499, -88.232624]], [[38.700979, -88.214085], [38.700983, -88.21441899999999], [38.700997, -88.215228], [38.704862, -88.21507199999999], [38.704851999999995, -88.214073], [38.700979, -88.214085]], [[38.694885, -88.23356], [38.69506, -88.232636], [38.694125, -88.232663], [38.693596, -88.23267899999999], [38.692456, -88.235284], [38.689582, -88.241851], [38.689538999999996, -88.241933], [38.689738999999996, -88.241945], [38.690308, -88.241929], [38.691972, -88.24191599999999], [38.693421, -88.241905], [38.694345, -88.23657399999999], [38.694652999999995, -88.234792], [38.694885, -88.23356]], [[38.735682, -88.149244], [38.735775, -88.149495], [38.736726999999995, -88.15168899999999], [38.736948999999996, -88.151671], [38.736939, -88.150786], [38.736937999999995, -88.150325], [38.736945, -88.149253], [38.735682, -88.149244]], [[38.655682, -88.149244], [38.645775, -88.179495], [38.636726999999995, -88.28168899999999], [38.656948999999996, -88.221671]]];\nconst fillBlueOptions = {\n  fillColor: 'blue'\n};\nconst blackOptions = {\n  color: 'black'\n};\nconst limeOptions = {\n  color: 'lime'\n};\nconst purpleOptions = {\n  color: 'purple'\n};\nconst redOptions = {\n  color: 'red'\n};\n\nfunction UpdateMapCentre(props) {\n  _s();\n\n  const map = useMap();\n  map.panTo(props.mapCentre);\n  return null;\n}\n\n_s(UpdateMapCentre, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n  return [useMap];\n});\n\n_c = UpdateMapCentre;\n\nfunction readFile() {\n  fetch(text).then(r => r.text()).then(res => {\n    console.log(typeof res);\n    console.log('text decoded:', res);\n  });\n}\n\nconst readData = async value => {\n  var res = await fetch(text);\n  res = await res.json();\n  return res;\n};\n\nfunction makePolygons(data) {\n  var poly = []; // console.log(data[0])\n\n  let sz = data.length;\n\n  for (let i = 0; i < sz; i++) {\n    let opa = (i % 50 + 1) / 51;\n    poly.push( /*#__PURE__*/_jsxDEV(Polygon, {\n      pathOptions: {\n        color: 'purple',\n        fillOpacity: opa\n      },\n      positions: data[i] // eventHandlers={{\n      //   mouseover: () => {console.log(i)}\n      // }}\n      ,\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        children: \"My Carriage value is: \" + i % 50 / 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this));\n  }\n\n  return poly;\n}\n\nclass VectorLayersExample extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      res: []\n    };\n  }\n\n  async componentDidMount() {// var rr = await readData()\n    // this.setState({ res: rr });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: this.props.center,\n        zoom: 13,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          center: this.props.center,\n          pathOptions: fillBlueOptions,\n          radius: 200\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CircleMarker, {\n          center: center,\n          pathOptions: redOptions,\n          radius: 20,\n          \"data-tip\": \"hello world\",\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: \"Popup in CircleMarker\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          pathOptions: limeOptions,\n          positions: polyline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n          pathOptions: limeOptions,\n          positions: multiPolyline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), makePolygons(this.state.res), /*#__PURE__*/_jsxDEV(UpdateMapCentre, {\n          mapCentre: this.props.center\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default VectorLayersExample;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateMapCentre\");","map":{"version":3,"sources":["/home/hemant/Desktop/broadband/src/Maps/MarkerMaps.js"],"names":["Circle","CircleMarker","MapContainer","Polyline","Polygon","Popup","Rectangle","TileLayer","Tooltip","UpdateMapCenter","useMap","text","React","useState","Component","Button","polyline","center","multiPolyline","polygon","multiPolygon","fillBlueOptions","fillColor","blackOptions","color","limeOptions","purpleOptions","redOptions","UpdateMapCentre","props","map","panTo","mapCentre","readFile","fetch","then","r","res","console","log","readData","value","json","makePolygons","data","poly","sz","length","i","opa","push","fillOpacity","VectorLayersExample","constructor","state","componentDidMount","render"],"mappings":"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","sourcesContent":["import {\n  Circle,\n  CircleMarker,\n  MapContainer,\n  Polyline,\n  Polygon,\n  Popup,\n  Rectangle,\n  TileLayer,\n  Tooltip,\n  UpdateMapCenter,\n  useMap\n} from 'react-leaflet';\nimport text from './example.txt';\nimport React, { useState, Component } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nconst polyline = [\n  [51.505, -0.09],\n  [51.51, -0.1],\n  [51.51, -0.12],\n]\n\nconst center = [39.90603, -87.998566];\n\nconst multiPolyline = [\n  [\n    [51.5, -0.1],\n    [51.5, -0.12],\n    [51.52, -0.12],\n  ],\n  [\n    [51.5, -0.05],\n    [51.5, -0.06],\n    [51.52, -0.06],\n  ],\n]\n\nconst polygon = [\n  [51.515, -0.09],\n  [51.52, -0.1],\n  [51.52, -0.12],\n]\n\nconst multiPolygon = [\n[\n  [38.687518, -88.16288899999999], [38.6871, -88.162885], [38.685832999999995, -88.162899], [38.685835, -88.163451], [38.685897, -88.16718], [38.685894, -88.167484], [38.686384, -88.16748899999999], [38.686775, -88.167501], [38.686845, -88.167503], [38.687919, -88.167498], [38.689687, -88.167508], [38.690301999999996, -88.167514], [38.69084, -88.16751699999999], [38.692687, -88.167513], [38.693148, -88.16752], [38.693149999999996, -88.167059], [38.693141, -88.166412], [38.693137, -88.16581], [38.693110999999995, -88.16425799999999], [38.693093, -88.163286], [38.693087, -88.16292299999999], [38.69254, -88.162961], [38.692022, -88.162953], [38.691573, -88.162936], [38.690597, -88.16293], [38.690221, -88.162932], [38.689695, -88.162926], [38.689022, -88.16292299999999], [38.688668, -88.162902], [38.688644, -88.162902], [38.688306, -88.162899], [38.688165999999995, -88.162898], [38.687706999999996, -88.16288899999999], [38.687518, -88.16288899999999]\n], \n[\n  [38.695499, -88.232624], [38.695993, -88.23261], [38.695980999999996, -88.232529], [38.695972999999995, -88.232434], [38.696092, -88.231669], [38.696222, -88.23091099999999], [38.69637, -88.230156], [38.696624, -88.228791], [38.69674, -88.228189], [38.696809, -88.227887], [38.696842, -88.22773099999999], [38.696723999999996, -88.227724], [38.696582, -88.227727], [38.696507, -88.227735], [38.696433999999996, -88.227756], [38.696397, -88.22776999999999], [38.69622, -88.227839], [38.696072, -88.227869], [38.695958999999995, -88.227863], [38.69506, -88.232636], [38.695499, -88.232624]\n],\n[\n  [38.700979, -88.214085], [38.700983, -88.21441899999999], [38.700997, -88.215228], [38.704862, -88.21507199999999], [38.704851999999995, -88.214073], [38.700979, -88.214085]\n], \n[\n  [38.694885, -88.23356], [38.69506, -88.232636], [38.694125, -88.232663], [38.693596, -88.23267899999999], [38.692456, -88.235284], [38.689582, -88.241851], [38.689538999999996, -88.241933], [38.689738999999996, -88.241945], [38.690308, -88.241929], [38.691972, -88.24191599999999], [38.693421, -88.241905], [38.694345, -88.23657399999999], [38.694652999999995, -88.234792], [38.694885, -88.23356]\n], \n[\n  [38.735682, -88.149244], [38.735775, -88.149495], [38.736726999999995, -88.15168899999999], [38.736948999999996, -88.151671], [38.736939, -88.150786], [38.736937999999995, -88.150325], [38.736945, -88.149253], [38.735682, -88.149244]\n],\n[\n  [38.655682, -88.149244], [38.645775, -88.179495], [38.636726999999995, -88.28168899999999], [38.656948999999996, -88.221671]\n]\n]\n\n\n\n\nconst fillBlueOptions = { fillColor: 'blue' }\nconst blackOptions = { color: 'black' }\nconst limeOptions = { color: 'lime' }\nconst purpleOptions = { color: 'purple' }\nconst redOptions = { color: 'red' }\n\n\nfunction UpdateMapCentre(props) {\n  const map = useMap();\n  map.panTo(props.mapCentre);\n  return null;\n} \n\n\nfunction readFile(){\n  fetch(text)\n  .then(r => r.text())\n  .then(res => {\n    console.log(typeof(res))\n    console.log('text decoded:', res);\n  })\n}\n\n\nconst readData = async(value) => {\n\n  var res = await fetch(text)\n  res = await res.json()\n\n  return res\n\n};\n\n\nfunction makePolygons(data){\n\n  var poly = []\n\n  // console.log(data[0])\n  let sz = data.length\n  for(let i = 0; i < sz; i++){\n    let opa = (i%50+1)/51\n    poly.push(\n      <Polygon \n        pathOptions={{\n          color: 'purple',\n          fillOpacity: opa\n        }}\n        positions={data[i]}\n        // eventHandlers={{\n        //   mouseover: () => {console.log(i)}\n        // }}\n      >\n      <Tooltip>{\"My Carriage value is: \" + (i%50)/5}</Tooltip>\n      </Polygon>\n    )\n  }\n\n  return poly\n}\n\n\n\nclass VectorLayersExample extends Component {\n\n\n  constructor(props){\n    super(props);\n    this.state = {\n      res: []\n    }\n  }\n\n  async componentDidMount() {\n    // var rr = await readData()\n    // this.setState({ res: rr });\n  }\n\n  render(){\n\n    return (\n      <div>\n        {/*<Button className=\"mb-3\" variant=\"primary\" onClick={ this.myRequests }>Primary</Button>*/}\n        <MapContainer center={this.props.center} zoom={13}>\n          <TileLayer\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          />\n          <Circle center={this.props.center} pathOptions={fillBlueOptions} radius={200} />\n          {/*<MarkPositions/>*/}\n          <CircleMarker\n            center={center}\n            pathOptions={redOptions}\n            radius={20}\n            data-tip=\"hello world\"\n            >\n            <Popup>Popup in CircleMarker</Popup>\n          </CircleMarker>\n          <Polyline pathOptions={limeOptions} positions={polyline} />\n          <Polyline pathOptions={limeOptions} positions={multiPolyline} />\n          {makePolygons(this.state.res)}\n          <UpdateMapCentre mapCentre={this.props.center} />\n        </MapContainer>\n      </div>\n    );\n  }\n}\n\nexport default VectorLayersExample;"]},"metadata":{},"sourceType":"module"}