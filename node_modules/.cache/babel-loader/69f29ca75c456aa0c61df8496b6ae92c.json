{"ast":null,"code":"var _jsxFileName = \"/home/hemant/Desktop/broadband/src/Maps/MarkerMaps.js\",\n    _s = $RefreshSig$();\n\nimport { Circle, CircleMarker, MapContainer, Polyline, Polygon, Popup, Rectangle, TileLayer, UpdateMapCenter, useMap } from 'react-leaflet';\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst polyline = [[51.505, -0.09], [51.51, -0.1], [51.51, -0.12]];\nconst center = [51.505, -0.09];\nconst multiPolyline = [[[51.5, -0.1], [51.5, -0.12], [51.52, -0.12]], [[51.5, -0.05], [51.5, -0.06], [51.52, -0.06]]];\nconst polygon = [[51.515, -0.09], [51.52, -0.1], [51.52, -0.12]];\nconst multiPolygon = [[[51.51, -0.12], [51.51, -0.13], [51.53, -0.13]], [[51.51, -0.05], [51.51, -0.07], [51.53, -0.07]]];\nconst rectangle = [[51.49, -0.08], [51.5, -0.06]];\nconst fillBlueOptions = {\n  fillColor: 'blue'\n};\nconst blackOptions = {\n  color: 'black'\n};\nconst limeOptions = {\n  color: 'lime'\n};\nconst purpleOptions = {\n  color: 'purple'\n};\nconst redOptions = {\n  color: 'red'\n};\n\nfunction UpdateMapCentre(props) {\n  _s();\n\n  const map = useMap();\n  map.panTo(props.mapCentre);\n  console.log(props);\n  return null;\n} // function MarkPositions() {\n//   return \n//   (<div>\n//     {for (var i = 0; i <= 10; i++) {\n//       <CircleMarker\n//         center={[51.51+i/10, -0.12+i/10]}\n//         pathOptions={redOptions}\n//         radius={20}>\n//         <Popup>Popup in CircleMarker</Popup>\n//       </CircleMarker>\n//     }}\n//     </div>\n//   )\n// } \n\n\n_s(UpdateMapCentre, \"cX187cvZ2hODbkaiLn05gMk1sCM=\", false, function () {\n  return [useMap];\n});\n\n_c = UpdateMapCentre;\n\nfunction returnPolygon() {\n  const items = [];\n\n  for (var i = 0; i <= 10; i++) {\n    items.push( /*#__PURE__*/_jsxDEV(Polygon, {\n      pathOptions: purpleOptions,\n      positions: polygon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 16\n    }, this));\n  }\n\n  return items;\n}\n\nfunction VectorLayersExample(props) {\n  const items = [];\n\n  for (var i = 0; i <= 10; i++) {\n    items.push( /*#__PURE__*/_jsxDEV(Polygon, {\n      pathOptions: purpleOptions,\n      positions: polygon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 16\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: props.center,\n      zoom: 13,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Circle, {\n        center: props.center,\n        pathOptions: fillBlueOptions,\n        radius: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CircleMarker, {\n        center: [51.51, -0.12],\n        pathOptions: redOptions,\n        radius: 20,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"Popup in CircleMarker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n        pathOptions: limeOptions,\n        positions: polyline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n        pathOptions: limeOptions,\n        positions: multiPolyline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Polygon, {\n        pathOptions: purpleOptions,\n        positions: polygon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Polygon, {\n        pathOptions: purpleOptions,\n        positions: multiPolygon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), returnPolygon(), /*#__PURE__*/_jsxDEV(Rectangle, {\n        bounds: rectangle,\n        pathOptions: blackOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UpdateMapCentre, {\n        mapCentre: props.center\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = VectorLayersExample;\nexport default VectorLayersExample;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"UpdateMapCentre\");\n$RefreshReg$(_c2, \"VectorLayersExample\");","map":{"version":3,"sources":["/home/hemant/Desktop/broadband/src/Maps/MarkerMaps.js"],"names":["Circle","CircleMarker","MapContainer","Polyline","Polygon","Popup","Rectangle","TileLayer","UpdateMapCenter","useMap","React","useState","Button","polyline","center","multiPolyline","polygon","multiPolygon","rectangle","fillBlueOptions","fillColor","blackOptions","color","limeOptions","purpleOptions","redOptions","UpdateMapCentre","props","map","panTo","mapCentre","console","log","returnPolygon","items","i","push","VectorLayersExample"],"mappings":"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","sourcesContent":["import {\n  Circle,\n  CircleMarker,\n  MapContainer,\n  Polyline,\n  Polygon,\n  Popup,\n  Rectangle,\n  TileLayer,\n  UpdateMapCenter,\n  useMap\n} from 'react-leaflet';\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nconst polyline = [\n  [51.505, -0.09],\n  [51.51, -0.1],\n  [51.51, -0.12],\n]\n\nconst center = [51.505, -0.09];\n\nconst multiPolyline = [\n  [\n    [51.5, -0.1],\n    [51.5, -0.12],\n    [51.52, -0.12],\n  ],\n  [\n    [51.5, -0.05],\n    [51.5, -0.06],\n    [51.52, -0.06],\n  ],\n]\n\nconst polygon = [\n  [51.515, -0.09],\n  [51.52, -0.1],\n  [51.52, -0.12],\n]\n\nconst multiPolygon = [\n  [\n    [51.51, -0.12],\n    [51.51, -0.13],\n    [51.53, -0.13],\n  ],\n  [\n    [51.51, -0.05],\n    [51.51, -0.07],\n    [51.53, -0.07],\n  ],\n]\n\nconst rectangle = [\n  [51.49, -0.08],\n  [51.5, -0.06],\n]\n\nconst fillBlueOptions = { fillColor: 'blue' }\nconst blackOptions = { color: 'black' }\nconst limeOptions = { color: 'lime' }\nconst purpleOptions = { color: 'purple' }\nconst redOptions = { color: 'red' }\n\n\nfunction UpdateMapCentre(props) {\n  const map = useMap();\n  map.panTo(props.mapCentre);\n  console.log(props)\n  return null;\n} \n\n// function MarkPositions() {\n\n//   return \n//   (<div>\n//     {for (var i = 0; i <= 10; i++) {\n//       <CircleMarker\n//         center={[51.51+i/10, -0.12+i/10]}\n//         pathOptions={redOptions}\n//         radius={20}>\n//         <Popup>Popup in CircleMarker</Popup>\n//       </CircleMarker>\n//     }}\n//     </div>\n//   )\n// } \n\n\nfunction returnPolygon(){\n  const items = []\n\n  for (var i = 0; i <= 10; i++) {\n    items.push(<Polygon pathOptions={purpleOptions} positions={polygon} />)\n  }\n\n  return items\n}\n\n\nfunction VectorLayersExample(props) {\n\n  const items = []\n\n  for (var i = 0; i <= 10; i++) {\n    items.push(<Polygon pathOptions={purpleOptions} positions={polygon} />)\n  }\n\n  return (\n    <div>\n      {/*<Button className=\"mb-3\" variant=\"primary\" onClick={ this.myRequests }>Primary</Button>*/}\n      <MapContainer center={props.center} zoom={13}>\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        <Circle center={props.center} pathOptions={fillBlueOptions} radius={200} />\n        {/*<MarkPositions/>*/}\n        <CircleMarker\n          center={[51.51, -0.12]}\n          pathOptions={redOptions}\n          radius={20}>\n          <Popup>Popup in CircleMarker</Popup>\n        </CircleMarker>\n        <Polyline pathOptions={limeOptions} positions={polyline} />\n        <Polyline pathOptions={limeOptions} positions={multiPolyline} />\n        <Polygon pathOptions={purpleOptions} positions={polygon} />\n        <Polygon pathOptions={purpleOptions} positions={multiPolygon} />\n        {returnPolygon()}\n        <Rectangle bounds={rectangle} pathOptions={blackOptions} />\n        <UpdateMapCentre mapCentre={props.center} />\n      </MapContainer>\n    </div>\n  );\n}\n\nexport default VectorLayersExample;"]},"metadata":{},"sourceType":"module"}