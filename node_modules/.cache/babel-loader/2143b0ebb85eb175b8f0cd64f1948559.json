{"ast":null,"code":"var _jsxFileName = \"/home/hemant/Desktop/broadband/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport FormControl from 'react-bootstrap/FormControl';\nimport VectorLayersExample from './Maps/MarkerMaps';\nimport Autosuggest from 'react-autosuggest';\nimport \"./App.css\";\nimport \"./data.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = [29.926734999999997, -90.085848];\n\nconst get_result = async value => {\n  const resp = await fetch('https://api.geocode.earth/v1/autocomplete?text={' + value + '}&api_key=ge-c31c439a7099c92a', {\n    method: 'get',\n    headers: {\n      'Host': 'api.geocode.earth',\n      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0',\n      'Accept': '*/*',\n      'Accept-Language': 'en-US,en;q=0.5',\n      'Accept-Encoding': 'gzip, deflate , br',\n      'Origin': 'https://www.mapzen.com',\n      'DNT': '1',\n      'Connection': 'keep-alive',\n      'Sec-Fetch-Dest': 'empty',\n      'Sec-Fetch-Mode': 'no-cors',\n      'Sec-Fetch-Site': 'cross-site',\n      'TE': 'trailers',\n      'Referer': 'https://www.mapzen.com/',\n      'Pragma': 'no-cache',\n      'Cache-Control': 'no-cache'\n    }\n  });\n  const data1 = await resp.json();\n  return data1;\n};\n\nconst getSuggestions = async value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  var res = await get_result(value);\n  var data = [];\n\n  for (var ind in res.features) {\n    data.push({\n      name: res.features[ind].properties.name,\n      location: [res.features[ind].geometry.coordinates[1], res.features[ind].geometry.coordinates[0]]\n    });\n  }\n\n  return data;\n};\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: suggestion.name\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 62,\n  columnNumber: 3\n}, this);\n\nfunction renderColorLabelSingle() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"bg-near-white mt4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between\",\n      style: {\n        height: 45,\n        alignItems: 'flex-start'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"ph2\",\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"ph2\",\n        children: \"13\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        'border': 0,\n        'height': '5px',\n        'background-image': 'linear-gradient(to right, rgba(255,255,255,255), rgba(0, 8, 122))'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      class: \"tc\",\n      children: \"CV Values\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\nfunction renderColorLabelDouble() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"bg-near-white mt4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between\",\n      style: {\n        height: 45,\n        alignItems: 'flex-start'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"ph2\",\n        children: \"13\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"ph2\",\n        children: \"13\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        'border': 0,\n        'height': '5px',\n        'background-image': 'linear-gradient(to right, rgba(122, 12, 0), rgba(255,255,255,255), rgba(24, 51, 41))'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-between\",\n      style: {\n        height: 40\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"f7\",\n        children: \"(COX Dominates)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"CV Values\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"f7\",\n        children: \"(ATT Dominates)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\nfunction showSummary(data, isp) {\n  var plans = [];\n\n  if (data !== null && data[\"cv_\" + isp + \"_dict\"] !== null) {\n    console.log(data);\n\n    for (const [key, value] of Object.entries(data[\"cv_\" + isp + \"_dict\"])) {\n      plans.push( /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [key, \" : \", value]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this));\n    }\n  }\n\n  return plans;\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.handleCallback = childData => {\n      this.setState({\n        isp_summary: childData\n      });\n    };\n\n    this.onChange = (event, _ref) => {\n      let {\n        newValue\n      } = _ref;\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = async _ref2 => {\n      let {\n        value\n      } = _ref2;\n      this.setState({\n        suggestions: await getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionSelected = (value, _ref3) => {\n      let {\n        suggestion\n      } = _ref3;\n      this.setState({\n        center: suggestion.location,\n        city: suggestion.name\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      value: '',\n      suggestions: [],\n      center: center,\n      isp: 'cox',\n      compareTwoISPs: false,\n      city: 'New Orleans',\n      isp_summary: {}\n    };\n  }\n\n  render() {\n    const {\n      value,\n      suggestions\n    } = this.state;\n    const inputProps = {\n      placeholder: 'Type a city name',\n      value,\n      onChange: this.onChange,\n      className: \"input\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"outline w-70 pa3 ma2\",\n        children: /*#__PURE__*/_jsxDEV(VectorLayersExample, {\n          center: this.state.center,\n          isp: this.state.isp,\n          compareTwoISPs: this.state.compareTwoISPs,\n          city: this.state.city,\n          parentCallback: this.handleCallback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"outline w-30 ph3 ma2\",\n        children: [this.state.compareTwoISPs ? renderColorLabelDouble() : renderColorLabelSingle(), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"control\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"label\",\n            children: /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: \"Enter City\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n            \"aria-label\": \"Default\",\n            \"aria-describedby\": \"inputGroup-sizing-large\",\n            suggestions: suggestions,\n            onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n            onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n            getSuggestionValue: getSuggestionValue,\n            renderSuggestion: renderSuggestion,\n            onSuggestionSelected: this.onSuggestionSelected,\n            inputProps: inputProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"success\",\n            id: \"dropdown-basic\",\n            children: \"Select ISP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => {\n                this.setState({\n                  isp: 'cox',\n                  compareTwoISPs: false\n                });\n              },\n              children: \"Cox Comm.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => {\n                this.setState({\n                  isp: 'att',\n                  compareTwoISPs: false\n                });\n              },\n              children: \"AT&T\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => {\n                this.setState({\n                  isp: 'centurylink',\n                  compareTwoISPs: false\n                });\n              },\n              children: \"Centurylink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => {\n                this.setState({\n                  isp: 'xfinity',\n                  compareTwoISPs: false\n                });\n              },\n              children: \"Xfinity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => {\n                this.setState({\n                  isp: 'hugesnet',\n                  compareTwoISPs: false\n                });\n              },\n              children: \"Hugesnet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => {\n                this.setState({\n                  isp: 'viaset',\n                  compareTwoISPs: false\n                });\n              },\n              children: \"Viaset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mt-3\",\n          variant: \"primary\",\n          onClick: () => {\n            this.setState({\n              compareTwoISPs: !this.state.compareTwoISPs\n            });\n          },\n          children: \"Compare ISPs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 9\n        }, this), ' ', !this.state.compareTwoISPs ? showSummary(this.state.isp_summary, this.state.isp) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hemant/Desktop/broadband/src/App.js"],"names":["React","Component","MapContainer","TileLayer","Marker","Popup","Dropdown","Button","InputGroup","Badge","FormControl","VectorLayersExample","Autosuggest","center","get_result","value","resp","fetch","method","headers","data1","json","getSuggestions","inputValue","trim","toLowerCase","inputLength","length","res","data","ind","features","push","name","properties","location","geometry","coordinates","getSuggestionValue","suggestion","renderSuggestion","renderColorLabelSingle","height","alignItems","renderColorLabelDouble","showSummary","isp","plans","console","log","key","Object","entries","App","constructor","handleCallback","childData","setState","isp_summary","onChange","event","newValue","onSuggestionsFetchRequested","suggestions","onSuggestionSelected","city","onSuggestionsClearRequested","state","compareTwoISPs","render","inputProps","placeholder","className"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Badge from 'react-bootstrap/Badge';\nimport FormControl from 'react-bootstrap/FormControl';\nimport VectorLayersExample from './Maps/MarkerMaps';\nimport Autosuggest from 'react-autosuggest';\nimport \"./App.css\";\nimport \"./data.js\"\n\n\nconst center = [29.926734999999997, -90.085848];\n\nconst get_result = async(value) => {\n    const resp = await fetch('https://api.geocode.earth/v1/autocomplete?text={' + value + '}&api_key=ge-c31c439a7099c92a',{\n    method: 'get',\n    headers: {\n      'Host': 'api.geocode.earth',\n      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0',\n      'Accept': '*/*',\n      'Accept-Language': 'en-US,en;q=0.5',\n      'Accept-Encoding': 'gzip, deflate , br',\n      'Origin': 'https://www.mapzen.com',\n      'DNT': '1',\n      'Connection': 'keep-alive',\n      'Sec-Fetch-Dest': 'empty',\n      'Sec-Fetch-Mode': 'no-cors',\n      'Sec-Fetch-Site': 'cross-site',\n      'TE': 'trailers',\n      'Referer': 'https://www.mapzen.com/',\n      'Pragma': 'no-cache',\n      'Cache-Control': 'no-cache'\n    }\n  });\n  const data1 = await resp.json();\n  return data1;\n}\n\nconst getSuggestions = async(value) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  var res = await get_result(value)\n  var data = []\n  for(var ind in res.features){\n    data.push({\n      name: res.features[ind].properties.name,\n      location: [res.features[ind].geometry.coordinates[1], res.features[ind].geometry.coordinates[0]]\n    })\n  }\n\n  return data\n};\n\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => (\n  <div>\n    {suggestion.name}\n  </div>\n);\n\n\nfunction renderColorLabelSingle() {\n  return(\n    <div class=\"bg-near-white mt4\">\n      <div className=\"d-flex justify-content-between\" style = {{ height: 45, alignItems: 'flex-start'}}>\n        <p class=\"ph2\">0</p>\n        <p class=\"ph2\">13</p>\n      </div>\n      <div style={{\n        'border': 0,\n        'height': '5px',\n        'background-image': 'linear-gradient(to right, rgba(255,255,255,255), rgba(0, 8, 122))'\n      }} />\n      <p class=\"tc\">CV Values</p>\n    </div>\n  );\n}\n\n\nfunction renderColorLabelDouble() {\nreturn(\n    <div class=\"bg-near-white mt4\">\n      <div className=\"d-flex justify-content-between\" style = {{ height: 45, alignItems: 'flex-start'}}>\n        <p class=\"ph2\">13</p>\n        <p>0</p>\n        <p class=\"ph2\">13</p>\n      </div>\n      <div style={{\n        'border': 0,\n        'height': '5px',\n\n        'background-image': 'linear-gradient(to right, rgba(122, 12, 0), rgba(255,255,255,255), rgba(24, 51, 41))'\n      }} />\n      <div className=\"d-flex justify-content-between\" style = {{ height: 40}}>\n        <p class=\"f7\">(COX Dominates)</p>\n        <p>CV Values</p>\n        <p class=\"f7\">(ATT Dominates)</p>\n      </div>\n    </div>\n  );\n}\n\n\nfunction showSummary(data, isp) {\n  var plans = []\n  if(data !== null && data[\"cv_\" + isp + \"_dict\"] !== null){\n    console.log(data)\n    for (const [key, value] of Object.entries(data[\"cv_\" + isp + \"_dict\"])) {\n      plans.push(\n        <p>{key} : {value}</p>\n      )\n    }\n  }\n\n  return plans\n}\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      value: '',\n      suggestions: [],\n      center: center,\n      isp: 'cox',\n      compareTwoISPs: false,\n      city: 'New Orleans',\n      isp_summary: {}\n    };\n  }\n\n  handleCallback = (childData) =>{\n      this.setState({isp_summary: childData})\n  }\n\n  onChange = (event, {newValue}) => {\n    this.setState({\n      value: newValue\n    })\n  };\n\n  onSuggestionsFetchRequested = async({ value }) => {\n    this.setState({\n      suggestions: await getSuggestions(value)\n    });\n  };\n\n  onSuggestionSelected = (value, {suggestion}) => {\n    this.setState({\n      center: suggestion.location,\n      city: suggestion.name\n    })\n  }\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n\n  render(){\n    const { value, suggestions } = this.state;\n\n    const inputProps = {\n      placeholder: 'Type a city name',\n      value,\n      onChange: this.onChange,\n      className: \"input\"\n    };\n\n  return (\n    <div className=\"flex\">\n\n      <div class=\"outline w-70 pa3 ma2\">\n        <VectorLayersExample \n          center={this.state.center} \n          isp={this.state.isp} \n          compareTwoISPs={this.state.compareTwoISPs} \n          city={this.state.city}\n          parentCallback={this.handleCallback}\n        />\n      </div>\n\n      <div class=\"outline w-30 ph3 ma2\">\n\n        {this.state.compareTwoISPs ?\n          (renderColorLabelDouble()) :\n          (renderColorLabelSingle())\n        }\n\n        <label className=\"control\">\n          <h3 className=\"label\"><Badge bg=\"secondary\">Enter City</Badge></h3>\n          <Autosuggest\n            aria-label=\"Default\"\n            aria-describedby=\"inputGroup-sizing-large\"\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            onSuggestionSelected={this.onSuggestionSelected}\n            inputProps={inputProps}\n        />\n        </label>\n\n        <Dropdown>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            Select ISP\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={() => {this.setState({isp: 'cox', compareTwoISPs: false})}}>Cox Comm.</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.setState({isp: 'att', compareTwoISPs: false})}}>AT&T</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.setState({isp: 'centurylink', compareTwoISPs: false})}}>Centurylink</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.setState({isp: 'xfinity', compareTwoISPs: false})}}>Xfinity</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.setState({isp: 'hugesnet', compareTwoISPs: false})}}>Hugesnet</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.setState({isp: 'viaset', compareTwoISPs: false})}}>Viaset</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <Button className=\"mt-3\" variant=\"primary\" onClick={() => {this.setState({compareTwoISPs: !this.state.compareTwoISPs})} }>Compare ISPs</Button>{' '}\n      \n        {!this.state.compareTwoISPs ?\n          (showSummary(this.state.isp_summary, this.state.isp)) :\n          (<div></div>)\n        }\n\n      </div>\n\n    </div>\n  );\n}\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}