{"ast":null,"code":"var _jsxFileName = \"/home/hemant/Desktop/broadband/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport VectorLayersExample from './Maps/MarkerMaps';\nimport Autosuggest from 'react-autosuggest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = [29.926734999999997, -90.085848];\n\nconst get_result = async value => {\n  const resp = await fetch('https://api.geocode.earth/v1/autocomplete?text={' + value + '}&api_key=ge-b33c597834fe4b46', {\n    method: 'get',\n    headers: {\n      'Host': 'api.geocode.earth',\n      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0',\n      'Accept': '*/*',\n      'Accept-Language': 'en-US,en;q=0.5',\n      'Accept-Encoding': 'gzip, deflate , br',\n      'Origin': 'https://www.mapzen.com',\n      'DNT': '1',\n      'Connection': 'keep-alive',\n      'Sec-Fetch-Dest': 'empty',\n      'Sec-Fetch-Mode': 'no-cors',\n      'Sec-Fetch-Site': 'cross-site',\n      'TE': 'trailers',\n      'Referer': 'https://www.mapzen.com/',\n      'Pragma': 'no-cache',\n      'Cache-Control': 'no-cache'\n    }\n  });\n  const data1 = await resp.json();\n  return data1;\n};\n\nconst getSuggestions = async value => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n  var res = await get_result(value);\n  var data = [];\n\n  for (var ind in res.features) {\n    data.push({\n      name: res.features[ind].properties.name,\n      location: [res.features[ind].geometry.coordinates[1], res.features[ind].geometry.coordinates[0]]\n    });\n  }\n\n  return data;\n};\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: suggestion.name\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 59,\n  columnNumber: 3\n}, this);\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onChange = (event, _ref) => {\n      let {\n        newValue\n      } = _ref;\n      this.setState({\n        value: newValue\n      });\n    };\n\n    this.onSuggestionsFetchRequested = async _ref2 => {\n      let {\n        value\n      } = _ref2;\n      this.setState({\n        suggestions: await getSuggestions(value)\n      });\n    };\n\n    this.onSuggestionSelected = (value, _ref3) => {\n      let {\n        suggestion\n      } = _ref3;\n      this.setState({\n        center: suggestion.location\n      });\n    };\n\n    this.onSuggestionsClearRequested = () => {\n      this.setState({\n        suggestions: []\n      });\n    };\n\n    this.state = {\n      value: '',\n      suggestions: [],\n      center: center,\n      isp: 'cox',\n      compareTwoISPs: false\n    };\n  }\n\n  render() {\n    const {\n      value,\n      suggestions\n    } = this.state;\n    const inputProps = {\n      placeholder: 'Type a city name',\n      value,\n      onChange: this.onChange\n    };\n    console.log(this.state.isp);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"outline w-70 pa3 ma2\",\n        children: /*#__PURE__*/_jsxDEV(VectorLayersExample, {\n          center: this.state.center,\n          isp: this.state.isp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"outline w-30 pa3 ma2\",\n        children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n            id: \"inputGroup-sizing-default\",\n            children: \"Enter City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Autosuggest, {\n            \"aria-label\": \"Default\",\n            \"aria-describedby\": \"inputGroup-sizing-default\",\n            suggestions: suggestions,\n            onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n            onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n            getSuggestionValue: getSuggestionValue,\n            renderSuggestion: renderSuggestion,\n            onSuggestionSelected: this.onSuggestionSelected,\n            inputProps: inputProps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"success\",\n            id: \"dropdown-basic\",\n            children: \"Select ISP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => {\n                this.setState({\n                  isp: 'cox'\n                });\n              },\n              children: \"Cox Comm.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => {\n                this.setState({\n                  isp: 'att'\n                });\n              },\n              children: \"AT&T\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => {\n                this.setState({\n                  isp: 'centurylink'\n                });\n              },\n              children: \"Centurylink\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => {\n                this.setState({\n                  isp: 'xfinity'\n                });\n              },\n              children: \"Xfinity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => {\n                this.setState({\n                  isp: 'hugesnet'\n                });\n              },\n              children: \"Hugesnet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => {\n                this.setState({\n                  isp: 'viaset'\n                });\n              },\n              children: \"Viaset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"mb-3\",\n          variant: \"primary\",\n          onClick: () => {\n            this.setState({\n              compareTwoISPs: !this.state.compareTwoISPs\n            });\n          },\n          children: \"Compare ISPs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 9\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/hemant/Desktop/broadband/src/App.js"],"names":["React","Component","MapContainer","TileLayer","Marker","Popup","Dropdown","Button","InputGroup","FormControl","VectorLayersExample","Autosuggest","center","get_result","value","resp","fetch","method","headers","data1","json","getSuggestions","inputValue","trim","toLowerCase","inputLength","length","res","data","ind","features","push","name","properties","location","geometry","coordinates","getSuggestionValue","suggestion","renderSuggestion","App","constructor","onChange","event","newValue","setState","onSuggestionsFetchRequested","suggestions","onSuggestionSelected","onSuggestionsClearRequested","state","isp","compareTwoISPs","render","inputProps","placeholder","console","log"],"mappings":"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","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet'\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\nimport VectorLayersExample from './Maps/MarkerMaps';\nimport Autosuggest from 'react-autosuggest';\n\n\nconst center = [29.926734999999997, -90.085848];\n\nconst get_result = async(value) => {\n    const resp = await fetch('https://api.geocode.earth/v1/autocomplete?text={' + value + '}&api_key=ge-b33c597834fe4b46',{\n    method: 'get',\n    headers: {\n      'Host': 'api.geocode.earth',\n      'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:97.0) Gecko/20100101 Firefox/97.0',\n      'Accept': '*/*',\n      'Accept-Language': 'en-US,en;q=0.5',\n      'Accept-Encoding': 'gzip, deflate , br',\n      'Origin': 'https://www.mapzen.com',\n      'DNT': '1',\n      'Connection': 'keep-alive',\n      'Sec-Fetch-Dest': 'empty',\n      'Sec-Fetch-Mode': 'no-cors',\n      'Sec-Fetch-Site': 'cross-site',\n      'TE': 'trailers',\n      'Referer': 'https://www.mapzen.com/',\n      'Pragma': 'no-cache',\n      'Cache-Control': 'no-cache'\n    }\n  });\n    const data1 = await resp.json();\n    return data1;\n  }\n\nconst getSuggestions = async(value) => {\n  const inputValue = value.trim().toLowerCase();\n  const inputLength = inputValue.length;\n\n  var res = await get_result(value)\n  var data = []\n  for(var ind in res.features){\n    data.push({\n      name: res.features[ind].properties.name,\n      location: [res.features[ind].geometry.coordinates[1], res.features[ind].geometry.coordinates[0]]\n    })\n  }\n\n  return data\n};\n\n\nconst getSuggestionValue = suggestion => suggestion.name;\n\nconst renderSuggestion = suggestion => (\n  <div>\n    {suggestion.name}\n  </div>\n);\n\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      value: '',\n      suggestions: [],\n      center: center,\n      isp: 'cox',\n      compareTwoISPs: false\n    };\n  }\n\n\n  onChange = (event, {newValue}) => {\n    this.setState({\n      value: newValue\n    })\n  };\n\n  onSuggestionsFetchRequested = async({ value }) => {\n    this.setState({\n      suggestions: await getSuggestions(value)\n    });\n  };\n\n  onSuggestionSelected = (value, {suggestion}) => {\n    this.setState({\n      center: suggestion.location\n    })\n  }\n\n  onSuggestionsClearRequested = () => {\n    this.setState({\n      suggestions: []\n    });\n  };\n\n\n  render(){\n    const { value, suggestions } = this.state;\n\n    const inputProps = {\n      placeholder: 'Type a city name',\n      value,\n      onChange: this.onChange\n    };\n\n    console.log(this.state.isp)\n\n  return (\n    <div className=\"flex\">\n\n      <div class=\"outline w-70 pa3 ma2\">\n        <VectorLayersExample center={this.state.center} isp={this.state.isp}/>\n      </div>\n\n\n      <div class=\"outline w-30 pa3 ma2\">\n\n        <InputGroup className=\"mb-3\">\n          <InputGroup.Text id=\"inputGroup-sizing-default\">Enter City</InputGroup.Text>\n          <Autosuggest\n            aria-label=\"Default\"\n            aria-describedby=\"inputGroup-sizing-default\"\n            suggestions={suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            getSuggestionValue={getSuggestionValue}\n            renderSuggestion={renderSuggestion}\n            onSuggestionSelected={this.onSuggestionSelected}\n            inputProps={inputProps}\n        />\n          {/*<FormControl\n            aria-label=\"Default\"\n            aria-describedby=\"inputGroup-sizing-default\"\n          />*/}\n        </InputGroup>\n\n        <Dropdown>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            Select ISP\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item onClick={() => {this.setState({isp: 'cox'})}}>Cox Comm.</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.setState({isp: 'att'})}}>AT&T</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.setState({isp: 'centurylink'})}}>Centurylink</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.setState({isp: 'xfinity'})}}>Xfinity</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.setState({isp: 'hugesnet'})}}>Hugesnet</Dropdown.Item>\n            <Dropdown.Item onClick={() => {this.setState({isp: 'viaset'})}}>Viaset</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <Button className=\"mb-3\" variant=\"primary\" onClick={() => {this.setState({compareTwoISPs: !this.state.compareTwoISPs})} }>Compare ISPs</Button>{' '}\n\n      </div>\n\n    </div>\n  );\n}\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}